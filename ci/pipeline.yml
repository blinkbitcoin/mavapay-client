#@ load("@ytt:data", "data")

#@ load("vendor/ci/pipeline-fragments.lib.yml",
#@   "repo_resource",
#@   "pipeline_tasks_resource",
#@   "deps_version_resource",
#@   "bundled_deps_resource",
#@   "nodejs_task_image_config",
#@   "gcr_resource_type")


#! copy from pipeline-fragments.lib.yml
#@ def nodejs_deps_resource():
name: deps
type: git
source:
  paths: [pnpm-lock.yaml] #! that's the change
  uri: #@ data.values.git_uri
  branch: #@ data.values.git_branch
  private_key: #@ data.values.github_private_key
#@ end

#! Do nothing for now!
#@ def slack_failure_notification():
#@ return None
#@ end


#@ def nodejs_check_code():
name: check-code
serial: true
plan:
- in_parallel:
  - { get: repo, trigger: true }
  - { get: pipeline-tasks }
  - { get: bundled-deps, trigger: true}
- task: check-code
  config:
    platform: linux
    image_resource: #@ nodejs_task_image_config()
    inputs:
    - name: bundled-deps
    - name: pipeline-tasks
    - name: repo
    run:
      path: pipeline-tasks/ci/tasks/nodejs-check-code.sh #! that's the change
on_failure: #@ slack_failure_notification()
#@ end

#! copy from pipeline-fragments.lib.yml
#@ def install_pnpm_deps():
name: install-deps
plan:
- in_parallel:
  - {get: deps, trigger: true}
  - {get: pipeline-tasks}
  - {put: deps-version, params: {bump: patch}}
- task: install-deps
  config:
    platform: linux
    image_resource: #@ nodejs_task_image_config()
    inputs:
    - name: pipeline-tasks
    - name: deps
    - name: deps-version
    outputs:
    - name: bundled-deps
    run:
      path: pipeline-tasks/ci/tasks/cache-pnpm-deps.sh #! that's the change
- put: bundled-deps
  params:
    file: bundled-deps/bundled-deps-*.tgz
on_failure: #@ slack_failure_notification()
#@ end

jobs:
- #@ nodejs_check_code()
- #@ install_pnpm_deps()


resources:
- #@ repo_resource()
- #@ nodejs_deps_resource()
- #@ pipeline_tasks_resource()
- #@ deps_version_resource()
- #@ bundled_deps_resource()

resource_types:
- #@ gcr_resource_type()